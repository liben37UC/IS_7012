// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20191003012256_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.Business", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessCountry")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<int?>("NumberEmployees");

                    b.HasKey("ID");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("FinalProject.Models.Contractor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate");

                    b.Property<int>("BusinessID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<DateTime>("PlannedEndDate");

                    b.Property<int>("ProjectID");

                    b.Property<decimal?>("Rating");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("WorkStatus");

                    b.HasKey("ID");

                    b.HasIndex("BusinessID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("FinalProject.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualEndDate");

                    b.Property<int>("Budget");

                    b.Property<string>("DepartmentName");

                    b.Property<DateTime>("PlannedEndDate");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<decimal?>("RunningTotalCost");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("FinalProject.Models.Contractor", b =>
                {
                    b.HasOne("FinalProject.Models.Business", "Business")
                        .WithMany("Contractors")
                        .HasForeignKey("BusinessID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Project", "Project")
                        .WithMany("Contractors")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
